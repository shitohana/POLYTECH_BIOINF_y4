---
title: "HMM-профили"
author:
- Владислав Станин
date: 11/22/2024
# bibliography: _files/msa/references_msa.bib
---

# Профили последовательностей

Как мы с вами убедились на [парктике по MSA](./msa.qmd), последовательности могут содержать в себе консервативные и вариативные сайты. Замена некоторых оснований может привести к потере функции, а замена других - не приведёт ни к чему. При выравнивании мы чётко видели и те и другие основания рядом друг с другом.

Пусть мы хотим найти место связи транскрипционного фактора (**ТФ**) с мотивом **GCCAT** в длинной последовательности ДНК. Но вот незадача: ТФ успешно (но реже) связывается и с мотивами [**С**]{.underline}CCAT, G[**G**]{.underline}CAT, GC[**A**]{.underline}AT, но никогда не связывается с [**A**]{.underline}CCAT, GCC[**C**]{.underline}T, GC[**G**]{.underline}AT.

Мы умеем пользоваться **BLAST!** Просто поищем **GCCAT** в большей последовательности. Проблема в том, что обычный BLAST не учитывает то, что какие-то похожи последовательности нам не нужны, а какие-то более полезны, но не так сильно, как другие.

Проще говоря, определенным основаниям нужно установить вес или вероятность нахождения в конкретном месте последовательности. То есть, если мы знаем, что ТФ не сзывается с [**A**]{.underline}CCAT, то аденину на первом месте мотива мы ставим вес = 0 *(но не будем торопиться с таким жёстким ограничением - об этом далее)*.

# PSSM

**Пусть** у нас есть набор из 20 найденных мотивов, которые были подтверждены как связывающие ТФ:

``` bash
GCCAT
GCCAT
GCCCT
...
GCCAT
GCCAC
```

Самое простое, что можно сделать - посчитать количество появлений данного нуклеотида в каждой позиции и получить матрицу слева (матрица каунтов):

![PSSM](_files/hmm_profiles/pssm.png){#fig-pssm fig-align="center" width="1200"}

Очевидно, что консенсусная последовательность - GCCAT, так как в каждой позиции эти нуклеотиды самые частые. Такую матрицу можно перевести в матрицу частот ($F(i,x) = 15 \rightarrow P(i,x) =\frac{15}{20} = 0.75$).

**Первая проблема заключается в нулях матрицы.** Мы не можем быть уверены в том, что какая-нибудь родственная последовательность, которую мы пока не учли/не нашли не будет в данной позиции иметь нуклеотид, который мы отметили как "невозможный", то есть с вероятностью 0.

Допустим мы хотим сравнить (выровнять) с профилем последовательность **GCC[T]{.underline}T**. Мы будем перемножать вероятности: $$\frac{15}{20} * \frac{18}{20} * \frac{17}{20} * \frac{0}{20} * \frac{19}{20} = 0$$

*Из-за одного несовпадения мы получаем, что наша последовательность абсолютно не похожа на наш профиль... **Такая ситуация часто возникает, когда последовательностей в проифле мало.*** Эту проблему можно легко решать добавив "псевдо-число" к каждому значению матрицы, например, [**1**]{.underline} (добавление однёрки **называется правилом Лапласа**. Тогда:

$$\frac{16}{24} * \frac{19}{24} * \frac{18}{24} * \frac{1}{24} * \frac{20}{24} = 0.01374421$$

::: callout-important
Обратите внимание, что общее число последовательностей стало равным 24. Добавление однёрки к каждому числу в матрице равносильно добавлению еще 4-х последовательностей, которые целиком состоят из одного основания: **AAAAA, GGGGG, CCCCC, TTTTT**. Ну или если говорить просто, то сумма в каждом столбце новой матрицы будет просто увеличена на 4 :)
:::

Нам не очень важно само значение, главное, чтобы оно было максимальным. То есть если мы с профилем будем сравнивать несколько последовательностей, то наиболее похожей будет та, у который наибольшее значение "вероятности".

**В конце концов,** можно взять логарифм от такого маленького числа, а чтобы учесть "фоновую частоту" ($q(X)$, где $X$ - основание) нуклеотидов, будем еще и делить на неё. Учитывать её нужно, потому что разные основания с разной частотой встречаются в данном мотиве/гене/организме. Мы возьмём $q(X) = 0.25$ - как будто каждый нуклеотид встречается в равной пропорции.

$$S(i,x) = \log_2(\frac{P(i,x)}{q(x)})$$

**Так из обычной матрицы частот мы получили так называемую Position specific scoring matrix ([PSSM)]{.underline}** - справа на картинке сверху**.** Похожу матрицу, кстати, на каждой своей итерации строит PSI-BLAST. Полученный логарифм еще называют ***log odds score***, не путать с log odds ratio!

Еще один плюс: не нужно перемножать, можно складывать!

$$1.42 + 1.66 + 1.58 - 2.58 + 1.8 = 3.88$$

**Wonderful! Теперь можем поискать последовательность самостоятельно и получить её score**

# Поиск мотива

До этого мы рассматривали сравнения последовательностей с профилем, однако такая задача возникает редко. Чаще поиск похожих последовательностей (мотивов) проводят внутри другой большой последовательности.

Пусть мы используем профиль, который получили выше. Создадим его:

``` python
from Bio.Seq import Seq
from Bio import motifs

seqs = [Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), 
        Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"),
        Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"),
        Seq("CGCAT"), Seq("CGATT"), Seq("CCAAT"), Seq("CCTAT"), Seq("TCCAC")]

motif = motifs.create(seqs)

print(motif.consensus)  # напечатаем консенсусную последовательность
print(motif.counts)   # напечатаем матрицу каунтов
```

и нам нужно найти эту маленькую последовательность в большой:

``` python
seq_to_search_in = "GAGCTCGACTAGCAGTCTCTTATGAGGCCATTCAGCGGCTATGCTAGGGGACCCATTTTTA"
```

Создадим PSSM. Перед этим добавив единицу к каждому числу в матрице каунтов.

``` python
motif.pseudocounts = 1 # добавляем "псевдо-число"
PSSM = motif.pssm # Создаем PSSM
print(PSSM)
```

Теперь произведём поиск

``` python
l = len(motif.consensus) # длина мотива

for i, s in PSSM.search(seq_to_search_in): # Имещм мотивы в последовательности
   print(i, s, seq_to_search_in[i:i+l])
```

### Код

::: {.callout-tip collapse="true"}
## Разверни, чтобы увидеть

``` python
from Bio.Seq import Seq
from Bio import motifs

seq_to_search_in = "GCCAATGACTAGCAGTCTCTTATGAGGCCATTCAGCGGCTATGCTAGGGGACCCATTTTTA"
seqs = [Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), 
        Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"),
        Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"), Seq("GCCAT"),
        Seq("CGCAT"), Seq("CGATT"), Seq("CCAAT"), Seq("CCTAT"), Seq("TCCAC")]

motif = motifs.create(seqs)

print(motif.consensus)  # напечатаем консенсусную последовательность
print(motif.counts)   # напечатаем матрицу каунтов

motif.pseudocounts = 1 # добавляем "псевдо-число"
PSSM = motif.pssm # Создаем PSSM
print(PSSM)

l = len(motif.consensus) # длина мотива

for i, s in PSSM.search(seq_to_search_in): # Ищем мотивы в последовательности
   print(i, s, seq_to_search_in[i:i+l])
```
:::

# Проблемы PSSM

По своей сути поиск с помощью PSSM подразумевает нахождение последовательностей той же длины. **Этот подход не умеет обрабатывать вставки и делеции.** Да и как их учесть? Поиск идёт *скользящим окном.* Добавить в матрицу 5-ое состояние и присвоить ему вес не поможет, потому что при сравнении с профилем (матрицей) мы перемножаем вероятности нахождения данного основания в этом месте.

Пусть мы ищем мотив с [консенсусной последовательностью]{.underline} GCCAT в последовательности GCCCATT. Самые [вероятные]{.underline} находки: GCCCA и CCCAT, хотя хорошо было бы найти GCC-AT.

``` bash
GCCAT..
GCCCATT -> GCCCA

.GCCAT.
GCCCATT -> CCCAT

..GCCAT
GCCCATT
```

::: callout-important
Еще раз подчеркну, что это не обычное глобальное выравнивание, а сравнение сиквенса с профилем!
:::

::: callout-note
Данную проблему решила модификация и расширение PSSM - **Generalized profiles***,* которые, например используются в Pftools, pftsearch. Эта реализация "штрафует" за вставки и делеции, при этом штраф различается для каждой позиции. Менее популярный вариант, который, кстати, по своей структуре почти идентичен HMM-профилям. Кстати о них...
:::

# На арену выходит HMM

Удивитесь ли вы, что HMM для сравнения/выравнивания последовательностей - это PSSM, которая учитывает делеции и инсерции? После предыдущей заметки, наверное, нет, но давайте разбираться. Но перед этим лирическое отступление...

## Лирическое отступление

На [прошлом занятии](./hmm.qmd), вы подробнее познакомились со скрытыми марковскими моделями (HMM). В биоинформатике они чаще всего применяются для моделирования биологических последовательностей и предсказания их характеристик.

Модели могут быть до безобразия простыми и сложными. Например, для задачи определения интронов и экзонов в генах, HMM может оказаться совсем разной.

![](_files/hmm_profiles/hmm_exon_intron.png){fig-align="center" width="1300"}

На рисунке сверху **Модель А** симулирует простое чередование экзонов с интронами. **Модель B** используется для детекции сайтов сплайсинга, то есть границ между экзоном и интронов. Существует и **Модель С**, которая учитывает то, что в в кодирующем гене экзон содержит кратное трём количество нуклеотидов: $E_1$, $E_2$, $E_3$ - скрытые состояния соответственно первого, второго и третьего нуклеотида в кодоне. [**HMM моделирующие одно и то же могут быть сколь угодно сложными и длинными.**]{.underline}

Как вам, например, такая модель экзон-интронной структуры?

![GENSCAN architecture (1997)](_files/hmm_profiles/genscan.png){fig-align="center" width="383"}

Как видно, помимо экзонов и интронов она моделирует еще и сами гены в геноме. Первая версия алгоритма GENSCAN, которая проиллюстрирована сверху содержала скрытые состояния первого и последнего экзона, гена с единственным экзоном, промотора, poly-A хвоста и даже интронов в разных фазах - интрон начинающийся после 1-го, 2-го или 3-го нуклеотида последнего кодона экзона.

Главное, что нам важно понять - **Скрытые Марковские Модели могут быть сколь угодно сложными и длинными**. Усложнение с одной стороны нужно, чтобы увеличить чувствительность и учесть разнообразие вариантов, которые могут "случиться", а с другой - увеличивают вычислительную сложность.

## HMM-профиль

Итак, **скрытая марковская модель** оперирует вероятностями переходов между скрытыми состояниями и вероятностями эмиссии. Что в данном случае скрытое состояние? **Ответ прост - позиция в последовательности.** *И какая тогда вероятность перехода от одного нуклеотида к другому...?* [**Да-да, кажется, она равна 1.\
**]{.underline}

![](_files/hmm_profiles/hmmseq1.png){#fig-hmm_seq_1 fig-align="center" width="1000"}

Матрица эмиссий будет выглядеть так же, как матрица в середине на @fig-pssm. Но в чём тогда преимущество над PSSM? Как я и говорил, HMM может легко учитывать вставки и делеции.

*Не будем теперь рисовать эмиссии, но будем их подразумевать.*

![](_files/hmm_profiles/hmmseq2.png){#fig-hmm_seq_2 fig-align="center" width="1000"}

Теперь наша модель учитывает делеции. Видно, что в данной позиции последовательности может быть либо делеция либо нуклеотид. **Теперь переходы между** $M_i$ **могут иметь вес меньше 1**. Что делать с инсерциями? В отличие от делеций инсерции могут идти друг за другом сколь угодно долго (почти).

![](_files/hmm_profiles/hmmseq3.png){#fig-hmm_seq_3 fig-align="center" width="1000"}

Для продолжительных инерций в нашем графе у инсерций есть циклы. Инсерция может возникнуть после любого нуклеотида и даже после делеции.

**Итак, каждый переход (стрелка) имеет свой вес (вероятность) и каждое скрытое состояние, которые обозначены соответственно** $I_i$ **- insertion,** $D_i$ **- deletion,** $M_i$ **- match, имеют свои вероятности эмиссии оснований.**

::: callout-important
HMM-профили особенно популярны для работы с пептидными последовательностями. Одна из самых популярных задач, где они применяются - поиск белковых доменов. **Поэтому мы далее займемся именно этой задачей.**
:::

# Получение HMM-профиля

Архитектура, описанная сверху, со своими весами (вероятностями) переходов и эмиссий - это и есть HMM-профиль. Чтобы получить такой профиль нужно обучить нашу модель на наших последовательностях. Да, с помощью алгоритма Баума-Вэлша или...

***С помощью уже написанных для этого программ.***

**Будем баловаться с последовательностями домена протеин-киназы C.**


[ССЫЛКА НА ДАННЫЕ](https://github.com/polytech-bioinformatics/hmm_profiles_practice/tree/main/lecture_data)

## MSA

На [практике по MSA](./msa.qmd) с помощью разных алгоритмов мы создавали профили выравнивания, которые даже затем выравнивали друг с другом и создавали новый профиль (см. раздел *"Добавление к выравниванию новых последовательностей"*). Значит, **мы уже косвенно знакомы с созданием профилей.** То был профиль выравнивания - по сути набор последовательностей одной длины, которые содержат основания и пропуски. **Однако нам нужен профиль, который отражает некоторые вероятностные характеристики последовательности.**

Каждый "столбик" ($M_i\ I_i\ D_i$) в графе, как на @fig-hmm_seq_3, должен соответствовать столбику множественного выравнивания. .Выполним его:

``` bash
mafft pkce.fasta > pkce.aln.fasta
```

## Построение профиля

Для работы с HMM-профилями мы будем пользоваться программой **HMMER3**.

Сконструируем профиль и скомпрессируем его

``` bash
hmmbuild pkce.hmm pkce.aln.fasta
```

Давайте осмотрим посмотрим, что из себя представляет профиль: `cat profile.hmm` (разверни):

::: {.callout-note collapse="true"}
## Разверни, чтобы увидеть

```         
cat pkce.hmm
HMMER3/f [3.4 | Aug 2023]
NAME  pkce.aln
LENG  55
ALPH  amino
RF    no
MM    no
CONS  yes
CS    no
MAP   yes
DATE  Tue Nov 19 21:45:25 2024
NSEQ  34
EFFN  0.958740
CKSUM 3217064861
STATS LOCAL MSV       -8.6702  0.71910
STATS LOCAL VITERBI   -9.2099  0.71910
STATS LOCAL FORWARD   -4.2500  0.71910
HMM          A        C        D        E        F        G        H        I        K        L        M        N        P        Q        R        S        T        V        W        Y
            m->m     m->i     m->d     i->m     i->i     d->m     d->d
  COMPO   2.77263  2.62265  3.21528  2.98393  3.08155  2.57709  2.98533  3.05346  2.73044  2.57265  3.70164  2.99157  3.57488  3.07012  3.00638  2.84088  2.99448  2.77413  4.77879  3.35280
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.00000        *
      1   2.63035  4.14042  3.95684  3.13517  3.22947  3.71666  3.55192  2.19421  3.26691  2.04974  2.58567  3.64023  4.08255  3.51642  3.49119  2.99667  2.86236  1.85914  4.75785  3.56109      1 v - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      2   2.83779  4.95416  2.74833  2.36075  4.27997  3.39537  3.50803  3.80020  2.66575  3.39217  4.26803  3.04213  1.32129  3.06947  3.04626  2.86875  3.13583  3.45659  5.54829  4.20308      2 p - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      3   3.37470  5.12086  3.46784  3.26722  3.53591  3.73468  0.64863  4.12445  3.10435  3.57606  4.65026  3.66051  4.30815  3.64023  3.34707  3.44580  3.69237  3.85425  4.99417  3.48054      3 H - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      4   2.78656  5.12764  3.09355  2.50620  4.48977  3.52233  3.30142  3.90903  1.75299  3.39254  4.18553  2.86156  3.90260  2.49669  1.93996  2.60212  2.81431  3.53259  5.50781  4.19977      4 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      5   3.65963  4.97754  4.64577  4.42524  0.62983  4.26090  4.04468  3.15803  4.32767  2.46374  3.84960  4.36518  4.71956  4.41610  4.37389  3.90774  3.96431  3.16890  4.22320  2.56020      5 F - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      6   2.42576  4.38175  2.94795  2.35481  4.06311  3.22991  3.63692  3.48170  2.19365  2.98401  3.89054  2.89496  3.82347  2.78426  2.68093  2.31370  2.71558  2.82461  5.31990  3.98270      6 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      7   2.47639  4.31927  3.31829  2.68618  3.46051  3.57358  3.82965  2.33383  2.85575  2.42948  3.42441  3.22256  3.67054  3.15987  3.21063  2.81979  2.60229  2.08543  4.90655  3.55564      7 v - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      8   2.84520  4.92238  3.19311  2.70092  4.10469  3.55123  1.59801  3.66446  2.28237  3.22686  4.09461  3.15295  3.98575  2.90983  2.25088  2.88997  2.81072  3.35416  5.32496  4.00205      8 h - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
      9   2.61593  4.76924  2.99626  2.49931  4.06678  3.40906  3.46954  3.48864  2.49481  3.10022  3.50360  1.96783  3.84357  2.85852  2.93519  2.23950  2.61317  3.15939  5.34067  4.01347      9 n - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     10   3.86612  5.05056  4.79765  4.53022  1.52205  4.55471  3.53980  3.53801  4.36650  2.83254  4.12418  4.20623  4.85740  4.28797  4.36593  3.93726  4.08590  3.46895  3.66222  0.82833     10 y - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     11   2.65929  4.79285  3.10555  2.53202  3.73662  3.48656  3.37425  3.43116  1.75010  3.03794  2.97002  3.03151  3.60538  2.81985  2.55174  2.70757  2.88394  3.12589  5.28025  3.97366     11 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     12   2.61857  4.49683  3.28909  2.71941  3.29523  3.53197  3.75173  2.92589  2.36931  2.71225  3.42690  3.17582  3.91449  2.99761  2.20776  2.66492  2.84852  2.31464  5.05119  3.78871     12 r - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     13   2.79642  4.46579  3.74699  3.24568  2.48707  3.72611  3.99807  2.75899  3.16616  2.07579  3.43832  3.58174  1.73038  3.46932  3.46943  3.04359  3.06546  2.63346  4.78222  3.36861     13 p - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     14   2.13342  4.27923  3.66028  3.38339  4.25283  3.12840  4.38803  3.34586  3.35298  3.24525  4.19692  3.50761  3.86876  3.69074  3.62006  2.59628  0.99467  2.96301  5.68443  4.47730     14 t - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     15   3.67267  4.95139  4.67605  4.38215  0.76584  4.43848  3.70994  3.19079  4.23127  2.47933  3.81791  4.21712  4.77738  4.25228  4.27935  3.85544  3.91741  3.18189  3.86115  2.05438     15 f - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     16   2.97059  0.49843  4.54190  4.35610  4.29321  3.52201  4.93979  3.49763  4.18942  3.39403  4.52832  4.26666  4.25055  4.52363  4.25763  3.24132  3.46275  3.21920  5.63373  4.57583     16 C - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     17   3.05756  5.66427  1.04708  2.10075  4.94023  3.29782  3.85886  4.48052  2.89806  3.96383  4.82067  2.39497  3.93298  2.84129  3.50756  2.92909  3.35063  4.04294  6.11941  4.59013     17 d - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     18   3.37470  5.12086  3.46784  3.26722  3.53591  3.73468  0.64863  4.12445  3.10435  3.57606  4.65026  3.66051  4.30815  3.64023  3.34707  3.44580  3.69237  3.85425  4.99417  3.48054     18 H - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     19   2.97059  0.49843  4.54190  4.35610  4.29321  3.52201  4.93979  3.49763  4.18942  3.39403  4.52832  4.26666  4.25055  4.52363  4.25763  3.24132  3.46275  3.21920  5.63373  4.57583     19 C - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     20   3.07432  4.80989  3.80755  3.74932  4.86609  0.39137  4.84133  4.54757  3.97009  4.16078  5.14620  3.97318  4.20953  4.27149  4.16404  3.25627  3.57830  4.01876  5.87303  4.98146     20 G - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     21   2.34790  4.29280  3.48557  3.25552  4.42101  3.04848  4.34746  3.81691  3.30667  3.54780  4.40676  3.40952  3.80953  3.62720  3.59835  0.89583  2.51727  3.27924  5.77735  4.53921     21 s - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     22   3.46988  4.80760  4.94745  4.40918  3.11149  4.66963  4.95744  2.28130  4.19275  0.72160  2.47665  4.68401  4.84969  4.35130  4.31215  4.04858  3.69619  2.44765  5.23657  4.14761     22 l - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     23   3.44770  4.76845  4.97620  4.45837  3.16644  4.68009  5.00465  1.95299  4.25789  0.75564  2.98628  4.71664  4.87607  4.42073  4.37846  4.07223  3.68263  2.27487  5.28139  4.15739     23 l - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     24   3.91755  5.05035  4.91483  4.65909  1.72105  4.60306  3.49681  3.63578  4.47219  2.93533  4.19565  4.22758  4.88604  4.32795  4.42235  3.97103  4.12495  3.54062  1.88022  1.00014     24 y - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     25   3.07432  4.80989  3.80755  3.74932  4.86609  0.39137  4.84133  4.54757  3.97009  4.16078  5.14620  3.97318  4.20953  4.27149  4.16404  3.25627  3.57830  4.01876  5.87303  4.98146     25 G - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     26   3.45947  4.75650  5.07528  4.50925  2.88306  4.74172  4.99235  2.01124  4.37964  0.76470  2.77949  4.76297  4.87674  4.42861  4.46963  4.09513  3.67377  2.36232  5.21336  4.12875     26 l - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     27   2.62612  4.08257  4.14485  3.55615  2.66816  3.74149  4.03990  2.25176  3.42569  2.01884  2.67754  3.74266  4.10326  3.63297  3.04227  3.03212  2.85752  2.06816  4.67791  2.80200     27 l - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     28   2.99070  5.22155  3.34957  2.70867  4.64469  3.66132  3.35522  4.01817  1.42551  3.46313  4.29450  3.03074  4.02626  2.76968  1.63606  2.80449  3.16993  3.67085  5.52454  4.30289     28 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     29   3.15494  5.12672  3.13700  2.90770  4.33339  3.58716  4.06460  4.02128  2.71011  3.49261  4.52295  3.36599  4.15168  0.78809  2.98367  3.19522  3.45677  3.73554  5.55664  4.27541     29 q - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     30   3.07432  4.80989  3.80755  3.74932  4.86609  0.39137  4.84133  4.54757  3.97009  4.16078  5.14620  3.97318  4.20953  4.27149  4.16404  3.25627  3.57830  4.01876  5.87303  4.98146     30 G - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     31   2.63314  4.18728  3.83637  3.25915  3.00520  3.68667  3.65365  2.60701  2.89133  1.55650  2.97144  3.55901  4.05439  3.42345  3.40665  2.95893  2.86397  2.36420  4.73754  3.27381     31 l - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     32   2.83029  5.03281  3.14072  2.59122  4.24698  3.55787  3.05794  3.74680  2.20224  3.02018  4.11051  3.07478  3.94897  1.57951  2.35428  2.83843  3.04020  3.41982  5.38847  4.07278     32 q - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     33   2.97059  0.49843  4.54190  4.35610  4.29321  3.52201  4.93979  3.49763  4.18942  3.39403  4.52832  4.26666  4.25055  4.52363  4.25763  3.24132  3.46275  3.21920  5.63373  4.57583     33 C - - -
          2.68619  4.42226  2.77520  2.73124  3.46355  2.40514  3.72473  3.29355  2.67742  2.69356  4.24691  2.90348  2.73740  3.18147  2.89802  2.37888  2.77520  2.98508  4.58478  3.61504
          0.05491  3.08123  4.88948  0.63925  0.75011  0.48576  0.95510
     34   2.74619  5.18481  2.67722  2.06226  4.51598  3.41216  3.64317  3.97578  1.68273  3.46885  4.24747  2.88608  3.85154  2.41846  2.78851  2.41578  2.97881  3.57186  5.60808  4.22570     36 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     35   2.37285  4.03561  3.40542  2.73447  3.50198  3.07332  3.48814  2.65890  2.79983  2.52518  3.36604  3.13832  3.75832  3.10976  3.17003  2.69593  2.61154  2.18663  4.93417  3.69184     37 v - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     36   2.97059  0.49843  4.54190  4.35610  4.29321  3.52201  4.93979  3.49763  4.18942  3.39403  4.52832  4.26666  4.25055  4.52363  4.25763  3.24132  3.46275  3.21920  5.63373  4.57583     38 C - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     37   2.69083  5.05478  3.05809  2.54873  4.45779  2.92055  3.67037  3.86730  1.38085  3.38057  4.19328  2.95475  3.92143  2.80185  2.37675  2.72524  3.02721  3.50094  5.51692  4.22320     39 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     38   2.66559  3.72387  4.11736  3.53244  3.02695  3.77618  4.08169  2.33394  3.40951  1.90701  1.95363  3.75175  4.13491  3.63145  3.34593  3.06547  2.71442  2.28903  4.75166  3.56799     40 l - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     39   2.70976  4.81250  2.72534  2.61300  4.42801  3.23803  4.02053  4.05422  2.92249  3.67288  4.54421  1.06177  3.91113  3.24462  3.32183  2.51723  3.11006  3.58936  5.73363  4.33405     41 n - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     40   2.90501  4.31420  4.49990  3.97570  3.59758  4.10934  4.64186  1.52632  3.86211  2.34989  3.47739  4.18001  4.49915  4.13080  4.06898  3.20328  2.94515  1.17210  5.31466  4.10539     42 v - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     41   3.37470  5.12086  3.46784  3.26722  3.53591  3.73468  0.64863  4.12445  3.10435  3.57606  4.65026  3.66051  4.30815  3.64023  3.34707  3.44580  3.69237  3.85425  4.99417  3.48054     43 H - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     42   2.54159  4.65677  3.16218  2.59247  3.58237  3.49787  3.69373  2.87861  1.80487  2.88321  3.61242  3.07944  3.88180  2.88719  2.57342  2.71952  2.86044  2.96078  5.17568  3.54717     44 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     43   3.21531  5.22399  3.67238  3.01580  4.68974  3.77760  3.75258  4.06126  1.87238  3.50895  4.41548  3.37823  4.17199  2.90213  0.93089  3.23127  3.39031  3.75907  5.52974  4.38937     45 r - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     44   2.97059  0.49843  4.54190  4.35610  4.29321  3.52201  4.93979  3.49763  4.18942  3.39403  4.52832  4.26666  4.25055  4.52363  4.25763  3.24132  3.46275  3.21920  5.63373  4.57583     46 C - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     45   2.57211  5.02992  2.93632  2.02251  4.34002  3.27007  3.60365  3.53756  2.15726  3.16421  4.08558  2.91762  3.82220  2.17759  2.53648  2.64043  2.88165  3.40264  5.47382  4.11066     47 e - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     46   2.33882  4.96458  2.92275  2.31080  4.25457  3.23750  3.60866  3.69759  2.00337  3.24588  4.02705  2.77411  3.47823  2.58281  2.77165  2.58216  2.59553  3.13315  5.43568  4.06900     48 k - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     47   2.82191  5.03338  2.79081  2.46608  4.02414  3.45897  3.37304  3.74397  2.40338  3.30417  4.15473  1.45345  3.92935  2.90806  2.87927  2.82197  3.06483  3.41469  5.33527  3.52156     49 n - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     48   3.14062  4.47839  4.80378  4.29008  3.58927  4.44975  4.98879  1.78008  4.15671  2.10756  3.09860  4.51489  4.76969  4.42681  4.35679  3.82516  3.40562  0.89138  5.52891  4.32873     50 v - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     49   1.09578  4.31356  3.51554  3.22179  4.32720  3.10277  4.29626  3.65742  3.26112  3.39429  4.27002  3.41337  2.12349  3.57070  3.57368  2.56292  2.85628  3.18989  5.68519  4.47275     51 a - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     50   2.69403  5.02682  2.79564  2.37663  4.33616  3.40011  2.98332  3.78828  2.31826  3.33358  4.12891  2.06621  2.66143  2.79560  2.87472  2.49907  2.93671  3.41482  5.51487  4.14551     52 n - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     51   2.84902  5.28538  2.11117  2.25922  4.60206  3.33080  3.47229  4.10371  2.66837  3.62676  4.44142  1.45520  3.88179  2.91896  3.19542  2.64144  3.00600  3.69669  5.79172  4.35103     53 n - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     52   2.97059  0.49843  4.54190  4.35610  4.29321  3.52201  4.93979  3.49763  4.18942  3.39403  4.52832  4.26666  4.25055  4.52363  4.25763  3.24132  3.46275  3.21920  5.63373  4.57583     54 C - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     53   3.07432  4.80989  3.80755  3.74932  4.86609  0.39137  4.84133  4.54757  3.97009  4.16078  5.14620  3.97318  4.20953  4.27149  4.16404  3.25627  3.57830  4.01876  5.87303  4.98146     55 G - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     54   2.75718  4.23213  4.13993  3.58512  3.34982  3.87419  3.60293  1.66838  3.44675  2.27294  3.31893  3.83442  4.24724  3.72490  3.66254  3.18159  2.90141  1.50315  4.94739  3.73187     56 v - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.02329  4.16713  4.88948  0.61958  0.77255  0.48576  0.95510
     55   2.88922  5.41501  1.73924  2.21813  4.73304  3.00827  3.76570  4.23502  2.40745  3.72829  4.53579  1.71517  3.88419  2.91017  3.22167  2.80570  3.15813  3.80718  5.88383  4.41931     57 n - - -
          2.68618  4.42225  2.77519  2.73123  3.46354  2.40513  3.72494  3.29354  2.67741  2.69355  4.24690  2.90347  2.73739  3.18146  2.89801  2.37887  2.77519  2.98518  4.58477  3.61503
          0.01574  4.15958        *  0.61958  0.77255  0.00000        *
//
```
:::

Веса представляют собой те самые ***log-odds score***, как в матрице справа @fig-pssm (PSSM).

# Поиск домена

## Определение домена в белке

Искать будем домен **protein kinase C epsilon**. Можно найти домен и в одном белке, но давайте не будем мельчить и найдем его в нескольких белках сразу. Проведем поиск c помощью **hmmsearch** в пяти белках рыбки Danio Rerio (`danio_rerio_proteins.fasta`).

``` bash
hmmsearch --tblout pkce.tbl.txt \
   --domtblout pkce.dom.txt \
   -A pkce.alignment.txt \
   --cpu 8 \
   pkce.hmm danio_rerio_proteins.fasta
```

-   `--tblout <file>` - записать **лучший результат для каждого белка** в виде таблицы в `<file>`.

-   ``` --domtblout``<file> ``` - записать результаты поиска **для каждого домена (то есть все найденные домены в белке)** в виде таблицы в `<file>`.

-   `-A <file>` - вывести выравнивание найденного домена с белками в `<file>`

-   `--cpu <n>` - для паралелизации *(здесь можно не указывать)*

Итак, результат `cat result.dom.txt`:

::: {.callout-note collapse="true"}
## Разверни, чтобы увидеть

```         
#                                                                            --- full sequence --- -------------- this domain -------------   hmm coord   ali coord   env coord
# target name        accession   tlen query name           accession   qlen   E-value  score  bias   #  of  c-Evalue  i-Evalue  score  bias  from    to  from    to  from    to  acc description of target
#------------------- ---------- ----- -------------------- ---------- ----- --------- ------ ----- --- --- --------- --------- ------ ----- ----- ----- ----- ----- ----- ----- ---- ---------------------
ENSDARP00000045085.7 -            738 pkce.aln          -             55   4.5e-50  156.0  23.6   1   2   4.6e-16   4.6e-16   47.1   9.4     3    52   171   221   169   224 0.94 -
ENSDARP00000045085.7 -            738 pkce.aln          -             55   4.5e-50  156.0  23.6   2   2   5.3e-37   5.3e-37  114.1   6.2     1    55   243   297   243   297 0.99 -
ENSDARP00000149617.1 -            738 pkce.aln          -             55   4.5e-50  156.0  23.6   1   2   4.6e-16   4.6e-16   47.1   9.4     3    52   171   221   169   224 0.94 -
ENSDARP00000149617.1 -            738 pkce.aln          -             55   4.5e-50  156.0  23.6   2   2   5.3e-37   5.3e-37  114.1   6.2     1    55   243   297   243   297 0.99 -
ENSDARP00000096385.4 -            744 pkce.aln          -             55   9.5e-50  155.0  22.3   1   2   5.7e-16   5.7e-16   46.8   9.7     3    52   173   223   171   226 0.93 -
ENSDARP00000096385.4 -            744 pkce.aln          -             55   9.5e-50  155.0  22.3   2   2   9.9e-37   9.9e-37  113.3   4.7     1    55   245   299   245   299 0.98 -
ENSDARP00000063482.3 -            676 pkce.aln          -             55   1.1e-48  151.5  26.1   1   2   4.1e-16   4.1e-16   47.3   9.7     3    52   165   215   163   217 0.95 -
ENSDARP00000063482.3 -            676 pkce.aln          -             55   1.1e-48  151.5  26.1   2   2   1.4e-35   1.4e-35  109.6   8.5     1    55   234   288   234   288 0.98 -
ENSDARP00000148245.1 -            676 pkce.aln          -             55   1.2e-48  151.4  26.1   1   2   4.1e-16   4.1e-16   47.3   9.7     3    52   165   215   163   217 0.95 -
ENSDARP00000148245.1 -            676 pkce.aln          -             55   1.2e-48  151.4  26.1   2   2   1.4e-35   1.4e-35  109.6   8.5     1    55   234   288   234   288 0.98 -
#
# Program:         hmmsearch
# Version:         3.4 (Aug 2023)
# Pipeline mode:   SEARCH
# Query file:      pkce.hmm
# Target file:     danio_rerio_proteins.fasta
# Option settings: hmmsearch -A result.alignment.txt --tblout result.tbl.txt --domtblout result.dom.txt --cpu 8 pkce.hmm danio_rerio_proteins.fasta
```
:::

**Ура! Мы нашли кординаты 10 доменов!**

## Сканирование

Сканирование подразумевает выполнение и обратной задачи. Файл .hmm может содержать не один профиль, а много. Таким образом, файл, содержащий HMM-профили всевозможных доменов, может помочь найти в нашем белке все домены. Снова не будем мелчить и найдем все домены для пяти белков в `danio_rerio_proteins.fasta`.

Сначала нужно получить профили доменов. Давайте не будем выравнивать все последовтаельности доменов из базы данных PFAM, а просто скачаем готвые модели. Также, скомпрессируем файл, так как он большой и без этого не заработает **hmmscan**.

``` bash
wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz

gunzip -k Pfam-A.hmm.gz
hmmpress Pfam-A.hmm # команда помимо компрессии создает индексируемые файлы
rm Pfam-A.hmm
```

**Произведем сканирование с помощью hmmscan:**

``` bash
hmmscan --tblout drerio.tbl.txt \
   --domtblout drerio.dom.txt \
   -A drerio.alignment.txt \
   --cpu 8 \
   Pfam-A.hmm danio_rerio_proteins.fasta
```

-   `--tblout <file>` - записать **лучший результат для каждого домена в белке** в виде таблицы в `<file>`. Указаны будут все уникальные домены для каждого белка. Если в белке нашли домен дважды, то в таблице будет тот, что с лучшим *e-value.*

-   `--domtblout <file>` - записать результаты поиска **для всех найденных доменов** в виде таблицы в `<file>`.

-   `-A <file>` - вывести выравнивания найденных доменов с белками в `<file>`

-   `--cpu <n>` - для паралелизации

Результат `cat drerio.tbl.txt`:

::: {.callout-note collapse="true"}
## Разверни, чтобы увидеть

```         
#                                                               --- full sequence ---- --- best 1 domain ---- --- domain number estimation ----
# target name        accession  query name           accession    E-value  score  bias   E-value  score  bias   exp reg clu  ov env dom rep inc description of target
#------------------- ---------- -------------------- ---------- --------- ------ ----- --------- ------ -----   --- --- --- --- --- --- --- --- ---------------------
Pkinase              PF00069.30 ENSDARP00000045085.7 -            4.9e-66  223.1   0.0   7.8e-66  222.4   0.0   1.3   1   0   0   1   1   1   1 Protein kinase domain
PK_Tyr_Ser-Thr       PF07714.22 ENSDARP00000045085.7 -            1.5e-36  126.3   0.0   2.4e-36  125.7   0.0   1.3   1   0   0   1   1   1   1 Protein tyrosine and serine/threonine kinase
C1_1                 PF00130.27 ENSDARP00000045085.7 -            4.8e-35  119.4  23.8   1.4e-17   63.5   6.1   2.5   2   0   0   2   2   2   2 Phorbol esters/diacylglycerol binding domain (C1 domain)
Pkinase_C            PF00433.29 ENSDARP00000045085.7 -            7.5e-14   52.5   0.2   1.6e-13   51.4   0.2   1.6   1   0   0   1   1   1   1 Protein kinase C terminal domain
C2                   PF00168.35 ENSDARP00000045085.7 -            4.8e-12   46.3   0.0   9.7e-12   45.3   0.0   1.5   1   0   0   1   1   1   1 C2 domain
ABC1                 PF03109.21 ENSDARP00000045085.7 -            0.00018   21.0   0.2     0.013   14.9   0.1   2.2   1   1   0   2   2   2   1 ABC1 atypical kinase-like domain
PKC_C2               PF21494.2  ENSDARP00000045085.7 -             0.0018   18.7   0.0    0.0043   17.5   0.0   1.6   1   0   0   1   1   1   1 Protein kinase C delta/epsilon/eta/theta, C2 domain
Kinase-like          PF14531.11 ENSDARP00000045085.7 -             0.0083   15.7   0.0     0.028   13.9   0.0   1.8   1   1   0   1   1   1   1 Kinase-like
Kdo                  PF06293.19 ENSDARP00000045085.7 -               0.11   12.1   0.0       0.2   11.3   0.0   1.3   1   0   0   1   1   1   0 Lipopolysaccharide kinase (Kdo/WaaP) family
FTA2                 PF13095.11 ENSDARP00000045085.7 -               0.13   12.2   0.1       5.5    6.9   0.0   2.5   2   0   0   2   2   2   0 Kinetochore Sim4 complex subunit FTA2
C1_2                 PF03107.21 ENSDARP00000045085.7 -               0.27   11.9  17.8       1.4    9.5   3.6   2.9   2   0   0   2   2   2   0 C1 domain
FYVE_2               PF02318.21 ENSDARP00000045085.7 -               0.78   10.2  14.8       5.6    7.4   4.2   2.6   1   1   1   2   2   2   0 FYVE-type zinc finger
PHD                  PF00628.34 ENSDARP00000045085.7 -                3.7    7.9  19.6       1.1    9.6   3.0   2.7   2   0   0   2   2   2   0 PHD-finger
PHD_4                PF16866.10 ENSDARP00000045085.7 -                9.2    6.6  10.0       8.9    6.6   0.4   2.7   2   0   0   2   2   2   0 PHD-finger
Pkinase              PF00069.30 ENSDARP00000148245.1 -            3.1e-66  223.7   0.0   5.6e-66  222.9   0.0   1.5   1   0   0   1   1   1   1 Protein kinase domain
PK_Tyr_Ser-Thr       PF07714.22 ENSDARP00000148245.1 -            1.1e-37  130.1   0.0   2.3e-37  129.0   0.0   1.5   2   0   0   2   2   2   1 Protein tyrosine and serine/threonine kinase
C1_1                 PF00130.27 ENSDARP00000148245.1 -            2.8e-35  120.2  27.1   5.8e-18   64.7   8.2   2.6   2   0   0   2   2   2   2 Phorbol esters/diacylglycerol binding domain (C1 domain)
C2                   PF00168.35 ENSDARP00000148245.1 -            2.1e-13   50.7   0.1   3.7e-13   49.9   0.1   1.4   1   0   0   1   1   1   1 C2 domain
Pkinase_C            PF00433.29 ENSDARP00000148245.1 -            1.5e-10   41.9   4.6   5.1e-10   40.2   4.6   2.0   1   0   0   1   1   1   1 Protein kinase C terminal domain
ABC1                 PF03109.21 ENSDARP00000148245.1 -            2.6e-06   27.0   0.3    0.0015   18.0   0.0   2.3   1   1   1   2   2   2   2 ABC1 atypical kinase-like domain
Kinase-like          PF14531.11 ENSDARP00000148245.1 -            0.00034   20.3   0.0   0.00083   19.0   0.0   1.6   1   1   0   1   1   1   1 Kinase-like
B2-adapt-app_C       PF09066.15 ENSDARP00000148245.1 -             0.0032   17.7   0.1     0.012   15.9   0.0   2.0   2   0   0   2   2   2   1 Beta2-adaptin appendage, C-terminal sub-domain
FTA2                 PF13095.11 ENSDARP00000148245.1 -             0.0074   16.2   0.4       2.8    7.8   0.0   2.7   3   0   0   3   3   3   1 Kinetochore Sim4 complex subunit FTA2
Kdo                  PF06293.19 ENSDARP00000148245.1 -               0.01   15.6   0.2      0.02   14.6   0.2   1.4   1   0   0   1   1   1   0 Lipopolysaccharide kinase (Kdo/WaaP) family
Haspin_kinase        PF12330.13 ENSDARP00000148245.1 -              0.037   13.3   0.1     0.061   12.6   0.1   1.3   1   0   0   1   1   1   0 Haspin like kinase domain
APH                  PF01636.28 ENSDARP00000148245.1 -              0.078   13.0   0.1      0.48   10.4   0.0   2.0   1   1   1   2   2   2   0 Phosphotransferase enzyme family
C1_2                 PF03107.21 ENSDARP00000148245.1 -               0.14   12.8  19.7      0.74   10.5   5.1   2.9   2   0   0   2   2   2   0 C1 domain
DUF2321              PF10083.14 ENSDARP00000148245.1 -               0.64    9.9   5.2      0.18   11.7   1.6   1.9   1   1   0   1   1   1   0 Uncharacterized protein conserved in bacteria (DUF2321)
PHD_4                PF16866.10 ENSDARP00000148245.1 -                1.9    8.8  12.2       1.8    8.9   1.0   3.3   3   0   0   3   3   3   0 PHD-finger
FYVE_2               PF02318.21 ENSDARP00000148245.1 -                6.1    7.3  16.2       1.6    9.2   3.0   2.9   3   0   0   3   3   3   0 FYVE-type zinc finger
Pkinase              PF00069.30 ENSDARP00000063482.3 -            3.2e-66  223.7   0.0   5.6e-66  222.9   0.0   1.4   1   0   0   1   1   1   1 Protein kinase domain
PK_Tyr_Ser-Thr       PF07714.22 ENSDARP00000063482.3 -            1.1e-37  130.1   0.0   2.3e-37  129.0   0.0   1.5   2   0   0   2   2   2   1 Protein tyrosine and serine/threonine kinase
C1_1                 PF00130.27 ENSDARP00000063482.3 -            2.7e-35  120.2  27.1   5.8e-18   64.7   8.2   2.6   2   0   0   2   2   2   2 Phorbol esters/diacylglycerol binding domain (C1 domain)
C2                   PF00168.35 ENSDARP00000063482.3 -              2e-14   53.9   0.1   3.5e-14   53.2   0.1   1.4   1   0   0   1   1   1   1 C2 domain
Pkinase_C            PF00433.29 ENSDARP00000063482.3 -            1.9e-10   41.6   4.6   5.1e-10   40.2   4.6   1.8   1   0   0   1   1   1   1 Protein kinase C terminal domain
ABC1                 PF03109.21 ENSDARP00000063482.3 -            2.7e-06   27.0   0.3    0.0015   18.0   0.0   2.3   1   1   1   2   2   2   2 ABC1 atypical kinase-like domain
Kinase-like          PF14531.11 ENSDARP00000063482.3 -            0.00033   20.3   0.0   0.00083   19.0   0.0   1.6   1   1   0   1   1   1   1 Kinase-like
B2-adapt-app_C       PF09066.15 ENSDARP00000063482.3 -              0.005   17.1   0.0     0.012   15.9   0.0   1.6   1   0   0   1   1   1   1 Beta2-adaptin appendage, C-terminal sub-domain
FTA2                 PF13095.11 ENSDARP00000063482.3 -              0.007   16.3   0.4       2.8    7.8   0.0   2.8   3   0   0   3   3   3   1 Kinetochore Sim4 complex subunit FTA2
Kdo                  PF06293.19 ENSDARP00000063482.3 -               0.01   15.5   0.2      0.02   14.6   0.2   1.4   1   0   0   1   1   1   0 Lipopolysaccharide kinase (Kdo/WaaP) family
Haspin_kinase        PF12330.13 ENSDARP00000063482.3 -              0.037   13.3   0.1     0.061   12.6   0.1   1.3   1   0   0   1   1   1   0 Haspin like kinase domain
APH                  PF01636.28 ENSDARP00000063482.3 -              0.078   13.0   0.1      0.48   10.4   0.0   2.0   1   1   1   2   2   2   0 Phosphotransferase enzyme family
C1_2                 PF03107.21 ENSDARP00000063482.3 -               0.14   12.8  19.7      0.74   10.5   5.1   2.9   2   0   0   2   2   2   0 C1 domain
DUF2321              PF10083.14 ENSDARP00000063482.3 -               0.62    9.9   5.2      0.18   11.7   1.6   1.9   1   1   0   1   1   1   0 Uncharacterized protein conserved in bacteria (DUF2321)
PHD_4                PF16866.10 ENSDARP00000063482.3 -                1.9    8.8  12.2       1.8    8.9   1.0   3.4   3   0   0   3   3   3   0 PHD-finger
FYVE_2               PF02318.21 ENSDARP00000063482.3 -                5.9    7.4  16.2       1.6    9.2   3.0   3.0   3   0   0   3   3   3   0 FYVE-type zinc finger
Pkinase              PF00069.30 ENSDARP00000096385.4 -            1.2e-66  225.1   0.0   1.8e-66  224.5   0.0   1.2   1   0   0   1   1   1   1 Protein kinase domain
PK_Tyr_Ser-Thr       PF07714.22 ENSDARP00000096385.4 -            2.3e-36  125.7   0.0   3.8e-36  125.0   0.0   1.3   1   0   0   1   1   1   1 Protein tyrosine and serine/threonine kinase
C1_1                 PF00130.27 ENSDARP00000096385.4 -            1.1e-35  121.4  24.0   2.5e-18   65.9   5.8   2.5   2   0   0   2   2   2   2 Phorbol esters/diacylglycerol binding domain (C1 domain)
Pkinase_C            PF00433.29 ENSDARP00000096385.4 -            2.7e-14   53.9   0.3   7.9e-14   52.4   0.3   1.9   1   0   0   1   1   1   1 Protein kinase C terminal domain
C2                   PF00168.35 ENSDARP00000096385.4 -            3.7e-14   53.1   0.0   6.6e-14   52.3   0.0   1.5   1   0   0   1   1   1   1 C2 domain
ABC1                 PF03109.21 ENSDARP00000096385.4 -            4.4e-05   23.0   0.1    0.0048   16.3   0.1   2.3   2   0   0   2   2   2   1 ABC1 atypical kinase-like domain
PKC_C2               PF21494.2  ENSDARP00000096385.4 -            0.00017   22.0   0.0    0.0004   20.8   0.0   1.6   1   0   0   1   1   1   1 Protein kinase C delta/epsilon/eta/theta, C2 domain
FTA2                 PF13095.11 ENSDARP00000096385.4 -             0.0051   16.8   0.1      0.88    9.5   0.0   2.4   2   0   0   2   2   2   1 Kinetochore Sim4 complex subunit FTA2
Kinase-like          PF14531.11 ENSDARP00000096385.4 -              0.011   15.2   0.0     0.024   14.1   0.0   1.5   1   0   0   1   1   1   0 Kinase-like
Kdo                  PF06293.19 ENSDARP00000096385.4 -              0.068   12.9   0.0      0.12   12.1   0.0   1.3   1   0   0   1   1   1   0 Lipopolysaccharide kinase (Kdo/WaaP) family
C1_2                 PF03107.21 ENSDARP00000096385.4 -               0.18   12.4  16.7      0.91   10.2   2.7   2.8   2   0   0   2   2   2   0 C1 domain
FYVE_2               PF02318.21 ENSDARP00000096385.4 -               0.33   11.4  12.6       2.5    8.6   1.5   2.7   2   0   0   2   2   2   0 FYVE-type zinc finger
Pkinase              PF00069.30 ENSDARP00000149617.1 -            4.9e-66  223.1   0.0   7.8e-66  222.4   0.0   1.3   1   0   0   1   1   1   1 Protein kinase domain
PK_Tyr_Ser-Thr       PF07714.22 ENSDARP00000149617.1 -            1.5e-36  126.3   0.0   2.4e-36  125.7   0.0   1.3   1   0   0   1   1   1   1 Protein tyrosine and serine/threonine kinase
C1_1                 PF00130.27 ENSDARP00000149617.1 -            4.8e-35  119.4  23.8   1.4e-17   63.5   6.1   2.5   2   0   0   2   2   2   2 Phorbol esters/diacylglycerol binding domain (C1 domain)
Pkinase_C            PF00433.29 ENSDARP00000149617.1 -            7.5e-14   52.5   0.2   1.6e-13   51.4   0.2   1.6   1   0   0   1   1   1   1 Protein kinase C terminal domain
C2                   PF00168.35 ENSDARP00000149617.1 -            4.8e-12   46.3   0.0   9.7e-12   45.3   0.0   1.5   1   0   0   1   1   1   1 C2 domain
ABC1                 PF03109.21 ENSDARP00000149617.1 -            0.00018   21.0   0.2     0.013   14.9   0.1   2.2   1   1   0   2   2   2   1 ABC1 atypical kinase-like domain
PKC_C2               PF21494.2  ENSDARP00000149617.1 -             0.0018   18.7   0.0    0.0043   17.5   0.0   1.6   1   0   0   1   1   1   1 Protein kinase C delta/epsilon/eta/theta, C2 domain
Kinase-like          PF14531.11 ENSDARP00000149617.1 -             0.0083   15.7   0.0     0.028   13.9   0.0   1.8   1   1   0   1   1   1   1 Kinase-like
Kdo                  PF06293.19 ENSDARP00000149617.1 -               0.11   12.1   0.0       0.2   11.3   0.0   1.3   1   0   0   1   1   1   0 Lipopolysaccharide kinase (Kdo/WaaP) family
FTA2                 PF13095.11 ENSDARP00000149617.1 -               0.13   12.2   0.1       5.5    6.9   0.0   2.5   2   0   0   2   2   2   0 Kinetochore Sim4 complex subunit FTA2
C1_2                 PF03107.21 ENSDARP00000149617.1 -               0.27   11.9  17.8       1.4    9.5   3.6   2.9   2   0   0   2   2   2   0 C1 domain
FYVE_2               PF02318.21 ENSDARP00000149617.1 -               0.78   10.2  14.8       5.6    7.4   4.2   2.6   1   1   1   2   2   2   0 FYVE-type zinc finger
```
:::

**Итак, мы успешно проаннотировали наши белки.**

## Определение доменов в протеоме

Как вы увидели, поиск доменов можно производить и в множестве белков. Более того, можно искать несколько доменов в большом наборе белков*.* Эта задача, например, часто возникает при функциональном аннотировании белков, закодированных в *de novo* собранном геноме (т.н. протеом). Определив домены в белках, можно предполагать об их функциях.

# P.S.

## Дополнительно про команды HMMER3

### Если работаете с ДНК

::: callout-important
Важно помнить, что все команды, которые мы использовали выше подходят только для анализа белков (кроме `hmmbuild`, который работает для любых сиквенсов). Для работы с ДНК есть две другие команды:
:::

-   `nhmmer <queryfile> <seqfile>` - по своей сути это **blastn**, который в качестве `<queryfile>` принимает HMM-профиль, или множественное выравнивание, или просто fasta-файл и который будет производить поиск в `<seqfile>`.

-   `nhmmscan <hmm> <seqfile>` - `hmmscan` для нуклеотидных последовательностей.

### Еще для белков

-   `phmmer <query> <seqs>` - по своей сути это **blastp**

### Интересные

-   `hmmemit -N <N> <hmm>` - на основании профиля генерирует `<N>` случаных последовательностей.

-   `hmmalign <hmm> <seqfile>` - выровнять последовательности на HMM-профиль

-   `hmmfetch <hmm> <key>` (e.g. `hmmfetch Pfam-A.hmm PF00045`) - поиск модели в большом **.hmm-файле** по ключу.

-   `hmmstat <hmm>` - статистика профиля

## Готовые HMM-профили (где взять?)

-   [PFAM](https://www.ebi.ac.uk/interpro/entry/pfam/) (входит в InterPro) - белки

-   [DFAM](https://dfam.org/browse) - мобильные элементы и повторы

## Logo

Профиль еще можно визуализировать в виде так называмого **Logo**, где высота буквы означает "уверенность, что данное основание превалирует на данной позиции"**:**

![](_files/hmm_profiles/logo.png)

Сделать это можно, например, на сайте [skylign.org](http://skylign.org/), используя **.hmm-файл** профиля.

# Домашнее задание

[ССЫЛКА НА ДАННЫЕ](https://github.com/polytech-bioinformatics/hmm_profiles_practice/tree/main/variants)

Мы собрали геном **Cheburashka apelsinus** и предсказали его протеом - `cheb_apel_proteome.fasta`.

**Ваши задачи:**

1.  Взять последовательности доменов - по вариантам в папке <!--#  -->
2.  Создать HMM-профиль
3.  Визуализировать его, как **Logo**
4.  Найти белки в потеоме **Cheburashka apelsinus**, в которых содержится ваш домен
5.  [**Все**]{.underline} белки, в которых был найден домен, проаннотируйте (найдите [**все**]{.underline} домены, которые есть в этих белках) с помощью моделей PFAM (файлы `Pfam-A.hmm`)

-   Нужно привести все используемые команды.

-   Привести скрины или текст (*лучше не надо*) хотя бы "верхушки" файлов результатов

-   Подробно описать, что вы делали

-   Написать небольшой вывод о полученных результатах

-   Оформить в виде отчёта

### Варианты:

1.  `ig_mhc.fasta` - MHC immunoglobulin domain
2.  `atpase.fasta` - ATPase domain
3.  `fbox.fasta` - F-box domain
4.  `hgbb.fasta` - Hemoglobin beta subunit
5.  `bzip.fasta` - Basic leucine zipper domain

## Как вытащить последовательности из протеома по id

### Через **biopython**

Самостоятельно :)

### Утилита seqkit

или установить утилиту `seqkit`. Эта программа значительно упрощает работу с **fasta/q-**файлами.

[Можно и через конду, если вы с ней знакомы]{.underline} или:

#### Mac OS

``` bash
brew install seqkit
```

#### Linux

```         
wget https://github.com/shenwei356/seqkit/releases/download/v2.9.0/seqkit_linux_amd64.tar.gz
gunzip seqkit_linux_amd64.tar.gz
cp seqkit /usr/local/bin
```

### Приступим

``` bash
hmmsearch --tblout result.txt profile.hmm proteome.fasta  # Проводим поиск

grep -v "#" result.txt | awk '{print $3}' > proteins_w_domain.txt  # извлекаем имена белков

seqkit grep -f proteins_w_domain.txt proteome.fasta > protens_w_domain.fasta # получили белки, в которых мы нашли домены
```
